/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_brazilian_abnt2.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6
// -----------------

&sk {
    // don't release mods on other mods presses
    ignore-modifiers;
};

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"
        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";
        // both right thumb keys
        combo_accent {
            timeout-ms = <200>;
            key-positions = <32 33>;
            bindings = <&mo ACCENT>;
        };
        // internal-left & external-right thumb keys
        combo_sym2 {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&mo SYM2>;
        };
        // both left thumb keys
        combo_settings {
            timeout-ms = <200>;
            key-positions = <30 31>;
            bindings = <&mo SETTINGS>;
        };
        // left index & middle fingers (home-row)
        // hold control & space for Adobe workflow
        combo_ctrl_space {
            timeout-ms = <200>;
            key-positions = <12 13>;
            bindings = <&kp LC(SPACE)>;
            layers = <BASE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        // Base alpha layer
        default_layer {
            label = "Base";
            bindings = <
                &kp Q &kp W &kp E &kp R &kp T                          &kp Y &kp U  &kp I     &kp O   &kp P 
                &kp BR_A &kp BR_S &kp BR_D &kp BR_F &kp BR_G           &kp BR_H &kp BR_J  &kp BR_K     &kp BR_L &kp BR_CCED
                &kp BR_Z &kp BR_X &kp BR_C &kp BR_V &kp BR_B           &kp BR_N &kp BR_M  &kp BR_COMM &kp BR_DOT &kp BR_SCLN
                &mo EXT &qt LSHIFT SPACE           &kp SPACE &sl SYM
            >;
        };

        // Numbers and high frequency symbols
        sym_layer {
            label = "Sym.";
            bindings = <
                &kp BR_1 &kp BR_2 &kp BR_3 &kp BR_4 &kp BR_5                                &kp BR_6 &kp BR_7 &kp BR_8 &kp BR_9 &kp BR_0
                &kp BR_LABK &kp BR_AT &kp BR_LPRN &kp BR_LCBR &kp BR_LBRC           &kp BR_EQL &kp BR_QUES &kp BR_DQUO &kp BR_PLUS &kp BR_ASTR
                &kp BR_RABK &kp BR_USD &kp BR_RPRN &kp BR_RCBR &kp BR_RBRC          &kp BR_PERC &kp BR_EXLM &kp BR_QUOT &kp BR_MINUS &kp BR_SLSH
                &mo FNC &mo SYM2       &trans &trans
            >;
        };

        // Main modifiers and arrow keys
        ext_layer {
            label = "Mods";
            bindings = <
                &kp ESC &kp C_PREV &kp C_PP &kp C_NEXT &kp C_PAUSE     &kp PG_UP &kp HOME &kp UP &kp END &kp CAPS
                &sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT        &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp DEL
                &kp LC(BR_Z) &kp LC(BR_X) &kp LC(BR_C) &kp TAB &kp LC(BR_V)    &kp LC(BSPC) &kp BSPC &trans &trans &trans
                &trans &kp LCTRL    &kp ENTER  &mo FNC 
            >;
        };

        // Function keys with modifiers
        fnc_layer {
            label = "FRow";
            bindings = <
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                     &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
                &sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT        &kp F11 &kp F12 &kp PRINTSCREEN &trans &trans
                &none &none &none &none &none                         &none &none &none &none &none 
                &none &none              &none &none  
            >;
        };

        // Low frequency symbols.
        symbols_2_layer {
            label = "Sym.2";
            bindings = <
                &kp BR_CIRC &kp BR_UNDS &kp BR_PND &kp BR_EUR &kp BR_HASH         &none &none &none &none &none 
                &kp BR_GRV &kp BR_TILD &kp BR_BSLS &kp BR_PIPE &kp BR_AMPR         &none &none &none &none &none
                &none &none &kp BR_SECT &kp BR_CCED &kp BR_DEG            &none &none &none &none &none
                &none &none                                                &none &none 
            >;
        };

        // Used to type regional accents.
        accent_layer {
            label = "Accent";
            bindings = <
                &none &none &none &kp BR_DIAE &none                         &none &none &none &none &none 
                &kp BR_ACUT &kp BR_AGRV &kp BR_CIRC &kp BR_TILD &none       &none &none &none &none &none
                &none &none &none &kp BR_GRV &none                         &none &none &none &none &none
                &none &none                         &none &none 
            >;
        };

        // Used to change the keyboard's settings.
        settings_layer {
                label = "Sett.";
                bindings = <
                &bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
                &none &none &none &none      &bt BT_SEL 1                         &bt BT_SEL 4 &none &none &none &none
                &none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
                &none &none                         &none &none 
            >;
        };
    };
};







